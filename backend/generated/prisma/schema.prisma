// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Updated User model for NextAuth compatibility
model User {
  id             String   @id @default(cuid())
  username       String   @unique
  hashedPassword String? // Make optional for OAuth users
  name           String? // For NextAuth
  email          String?  @unique // For NextAuth
  image          String? // For NextAuth
  gamesPlayed    Int      @default(0)
  gamesWon       Int      @default(0)
  totalPoints    Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Your existing relations
  roomsOwned Room[] @relation("RoomOwner")
}

model Room {
  id         String  @id @default(cuid()) // Primary Key, unique CUID
  roomId     String  @unique // Your human-readable, unique room ID (e.g., "ABC123")
  maxPlayers Int     @default(8)
  accessCode String? // Optional: for private rooms

  ownerId   String
  ownerName String
  owner     User   @relation("RoomOwner", fields: [ownerId], references: [id]) // Foreign key to User

  // Game settings
  gameMode      String @default("rounds") // "rounds" or "points"
  maxRounds     Int    @default(5) // Maximum number of rounds in a game
  pointsToWin   Int    @default(3) // Points needed to win in points mode
  roundDuration Int    @default(60) // Time limit per round in seconds
  drawerChoice  String @default("random") // Choice for choosing the drawer

  // Game state (optional - could also be kept only in memory)
  status String @default("waiting") // "waiting", "playing", "ended"

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Keyword {
  id         Int      @id @default(autoincrement())
  word       String   @unique
  category   String?
  difficulty Int      @default(1) // Poziom trudno≈õci 1-5
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
